name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker compose -f docker-compose.yml build
          docker tag random_user_generator-web:latest ${{ secrets.DOCKER_HUB_USERNAME }}/random_user_generator-web:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/random_user_generator-web:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Setup SSH
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > ~/ec2-key.pem
          chmod 600 ~/ec2-key.pem

      - name: Leave Docker Swarm and Clean Up
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} << EOF
            # Remove any existing Docker Swarm stack
            docker stack rm random_user_generator || true

            # Remove all services from the stack
            docker service rm \$(docker service ls -q) || true

            # Leave the Swarm
            docker swarm leave --force || true

            # Clean up Docker environment
            docker system prune -f --volumes

            # Optionally, reset Docker Swarm configuration
            sudo rm -rf /var/lib/docker

            # Reinitialize Docker Swarm
            docker swarm init || true
          EOF

      - name: Deploy to EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          scp -o StrictHostKeyChecking=no -i ~/ec2-key.pem docker-compose.yml ubuntu@${{ secrets.EC2_HOST }}:~/docker-compose.yml
          scp -o StrictHostKeyChecking=no -i ~/ec2-key.pem docker-stack.yml ubuntu@${{ secrets.EC2_HOST }}:~/docker-stack.yml
          ssh -o StrictHostKeyChecking=no -i ~/ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} << EOF
            # Ensure Docker is running
            sudo systemctl start docker
            sudo systemctl enable docker

            # Pull the latest image from Docker Hub
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/random_user_generator-web:latest
            
            # Deploy the Docker Stack
            docker stack deploy -c ~/docker-stack.yml random_user_generator

            # Check the status of the stack
            docker stack services random_user_generator

            # Check the logs of the web service for debugging
            docker service logs random_user_generator_web

            # Optionally, check the Docker Compose configuration
            docker-compose -f ~/docker-compose.yml config || true

            # Optionally, check the Docker Compose version
            docker-compose --version
          EOF

